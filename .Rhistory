kappa[1]
sum(alloc1_0.3[v0.9[2]:nfft]) / kappa[1]
contrib1 <- c(contrib_0,
sum(alloc1_0.3[(v0.9[2] + 1):nfft]) / kappa[1],
sum(alloc1_0.7[(v0.9[2] + 1):nfft]) / kappa[1],
sum(alloc1_0.9[(v0.9[2] + 1):nfft]) / kappa[1])
sum(alloc1_0.3)
contrib1 <- c(contrib_0,
sum(alloc1_0.3[(v0.9[2] + 1):nfft]) / (1 - kappa[1]),
sum(alloc1_0.7[(v0.9[2] + 1):nfft]) / (1 - kappa[1]),
sum(alloc1_0.9[(v0.9[2] + 1):nfft]) / (1 - kappa[1]))
contrib1 <- c(contrib_0,
sum(alloc1_0.3[(v0.9[2] + 2):nfft]) / (1 - kappa[1]),
sum(alloc1_0.7[(v0.9[3] + 2):nfft]) / (1 - kappa[1]),
sum(alloc1_0.9[(v0.9[4] + 2):nfft]) / (1 - kappa[1]))
contrib1 <- c(contrib_0,
sum(alloc1_0.3[(v0.9[2] + 1):nfft]) / (1 - kappa[1]),
sum(alloc1_0.7[(v0.9[3] + 1):nfft]) / (1 - kappa[1]),
sum(alloc1_0.9[(v0.9[4] + 1):nfft]) / (1 - kappa[1]))
contrib1 <- c(contrib_0,
sum(alloc1_0.3[(v0.9[2]):nfft]) / (1 - kappa[1]),
sum(alloc1_0.7[(v0.9[3]):nfft]) / (1 - kappa[1]),
sum(alloc1_0.9[(v0.9[4]):nfft]) / (1 - kappa[1]))
v0.9[2]
sum(alloc1_0.3[69:nfft]) / (1 - kappa[1])
length(alloc1_0.3)
2^15
nfft
v[0.9]
v0.9
sum(alloc1_0.3[69:nfft]) / (1 - kappa[1])
sum(alloc1_0.3[68:nfft]) / (1 - kappa[1])
sum(alloc1_0.3[67:nfft]) / (1 - kappa[1])
alloc1_0.3 <- exp_alloc_Nv(A0.3, 1, lambda, 1, nfft = 2^7)
nfft <- 2^7
sum(alloc1_0.3[67:nfft]) / (1 - kappa[1])
sum(alloc1_0.3[68:nfft]) / (1 - kappa[1])
nfft <- 2^15
contrib_0 <- tv0.9[1] / d
alloc1_0.3 <- exp_alloc_Nv(A0.3, 1, lambda, 1)
alloc1_0.7 <- exp_alloc_Nv(A0.7, 1, lambda, 1)
alloc1_0.9 <- exp_alloc_Nv(A0.9, 1, lambda, 1)
contrib_0 <- tv0.9[1] / d
alloc16_0.3 <- exp_alloc_Nv(A0.3, 1, lambda, 16)
alloc16_0.7 <- exp_alloc_Nv(A0.7, 1, lambda, 16)
alloc16_0.9 <- exp_alloc_Nv(A0.9, 1, lambda, 16)
contrib_0 <- tv0.9[1] / d
alloc30_0.3 <- exp_alloc_Nv(A0.3, 1, lambda, 30)
alloc30_0.7 <- exp_alloc_Nv(A0.7, 1, lambda, 30)
alloc30_0.9 <- exp_alloc_Nv(A0.9, 1, lambda, 30)
sum(alloc1_0.3[domm > v0.9[2]]) / (1 - kappa[1])
v0.9
(v0.9 <- c(min(which(cumsum(fM0) >= kappa[1])) - 1,
min(which(cumsum(fM0.3) >= kappa[1])) - 1,
min(which(cumsum(fM0.7) >= kappa[1])) - 1,
min(which(cumsum(fM0.9) >= kappa[1])) - 1))
(v0.99 <- c(min(which(cumsum(fM0) >= kappa[2])) - 1,
min(which(cumsum(fM0.3) >= kappa[2])) - 1,
min(which(cumsum(fM0.7) >= kappa[2])) - 1,
min(which(cumsum(fM0.9) >= kappa[2])) - 1))
# equation de l'article
contrib_tvar <- function(A, fM, alloc, nu, lambda, kappa)
{
FM <- cumsum(fM)
varr <- min(which(FM >= kappa)) - 1
aa <- lambda - sum(alloc[0:varr + 1]) + (FM[varr + 1] - kappa) /fM[varr + 1] *
alloc[varr + 1]
1 / (1 - kappa) * cc
}
# equation de l'article
contrib_tvar <- function(A, fM, alloc, lambda, kappa)
{
FM <- cumsum(fM)
varr <- min(which(FM >= kappa)) - 1
aa <- lambda - sum(alloc[0:varr + 1]) + (FM[varr + 1] - kappa) /fM[varr + 1] *
alloc[varr + 1]
1 / (1 - kappa) * cc
}
contrib_tvar(A0.3, fM0.7, alloc1_0.3, lambda, kappa[1])
# equation de l'article
contrib_tvar <- function(A, fM, alloc, lambda, kappa)
{
FM <- cumsum(fM)
varr <- min(which(FM >= kappa)) - 1
aa <- lambda - sum(alloc[0:varr + 1]) + (FM[varr + 1] - kappa) /fM[varr + 1] *
alloc[varr + 1]
1 / (1 - kappa) * aa
}
contrib_tvar(A0.3, fM0.7, alloc1_0.3, lambda, kappa[1])
# equation de l'article
contrib_tvar <- function(fM, alloc, lambda, kappa)
{
FM <- cumsum(fM)
varr <- min(which(FM >= kappa)) - 1
aa <- lambda - sum(alloc[0:varr + 1]) + (FM[varr + 1] - kappa) /fM[varr + 1] *
alloc[varr + 1]
1 / (1 - kappa) * aa
}
contrib_tvar(fM0.3, alloc1_0.3, lambda, kappa[1])
contrib1 <- c(contrib_0,
contrib_tvar(fM0.3, alloc1_0.3, lambda, kappa[1]),
contrib_tvar(fM0.7, alloc1_0.7, lambda, kappa[1]),
contrib_tvar(fM0.9, alloc1_0.9, lambda, kappa[1]))
(contrib1 <- c(contrib_0,
contrib_tvar(fM0.3, alloc1_0.3, lambda, kappa[1]),
contrib_tvar(fM0.7, alloc1_0.7, lambda, kappa[1]),
contrib_tvar(fM0.9, alloc1_0.9, lambda, kappa[1])))
(contrib16 <- c(contrib_0,
contrib_tvar(fM0.3, alloc16_0.3, lambda, kappa[1]),
contrib_tvar(fM0.7, alloc16_0.7, lambda, kappa[1]),
contrib_tvar(fM0.9, alloc16_0.9, lambda, kappa[1])))
(contrib30 <- c(contrib_0,
contrib_tvar(fM0.3, alloc30_0.3, lambda, kappa[1]),
contrib_tvar(fM0.7, alloc30_0.7, lambda, kappa[1]),
contrib_tvar(fM0.9, alloc30_0.9, lambda, kappa[1])))
data.frame("beta" = beta,
"C(N1, M)" = contrib1,
"C(N16, M)" = contrib16,
"C(N30, M)" = contrib30)
data.frame("beta" = c(0, beta),
"C(N1, M)" = contrib1,
"C(N16, M)" = contrib16,
"C(N30, M)" = contrib30)
aretes <- matrix(c(1, 2, 2, 3, 2, 4, 2, 5, 2, 6, 2, 7, 2, 8,
2, 9, 9, 10, 9, 11, 9, 12, 9, 13, 9, 14, 9, 15,
9, 16, 16, 17, 16, 18, 16, 19, 16, 20, 16, 21, 16, 22,
16, 23, 23, 24, 23, 25, 23, 26, 23, 27, 23, 28, 23, 29,
23, 30, 30, 31, 30, 32, 30, 33, 30, 34, 30, 35, 30, 36,
30, 37, 30, 38, 30, 39, 30, 40, 30, 41, 30, 42, 30, 43,
30, 44, 30, 45, 30, 46, 30, 47, 30, 48, 30, 49, 30, 50),
byrow = TRUE, ncol = 2)
rep(0.9, 20))
aretes_alpha <- cbind(aretes, c(rep(0.8, 7),
0.1,
rep(0.6, 6),
0.1,
rep(0.5, 6),
0.1,
rep(0.4, 6),
0.1,
rep(0.9, 20))
)
aretes_alpha
A <- diag(d)
for (i in 1:nrow(aretes))
{
u <- aretes_alpha[i, 1]
v <- aretes_alpha[i, 2]
A[u, v] <- aretes_alpha[i, 3]
A[v, u] <- aretes_alpha[i, 3]
}
A
fM <- pdf_M(A, lambda)
fM <- pdf_M(A, lambda)
df_FM <- data.frame(x = 0:(nfft - 1),
"fM" = fM) %>% pivot_longer(cols = -x,
names_to = "beta",
values_to = "fM")
fM <- pdf_M(A, lambda)
df_FM <- data.frame(x = 0:(nfft - 1),
"fM" = fM) %>% pivot_longer(cols = -x,
names_to = "beta",
values_to = "fM")
dark2 <- brewer.pal(8, "Dark2")
couleurs <- c("fM" = dark2[1])
(ggFM <- ggplot(df_FM %>% filter(x <= 200), aes(x = x, y = fM)) +
geom_segment(aes(xend = x, yend = 0), show.legend = TRUE) +
geom_point() +
labs(title = bquote("FMP de M selon les valeurs de" ~ beta),
x = expression(x),
y = expression(p[M](x)),
col = expression(beta)) +
theme_classic() +
scale_color_manual(values = setNames(couleurs, c("fM"))))
fM <- pdf_M(A, lambda)
df_FM <- data.frame(x = 0:(nfft - 1),
"fM" = fM) %>% pivot_longer(cols = -x,
names_to = "beta",
values_to = "fM")
dark2 <- brewer.pal(8, "Dark2")
couleurs <- c("fM" = dark2[1])
(ggFM <- ggplot(df_FM %>% filter(x <= 200), aes(x = x, y = fM)) +
geom_segment(aes(xend = x, yend = 0), show.legend = TRUE) +
geom_point() +
labs(title = bquote("FMP de M selon les valeurs de" ~ beta),
x = expression(x),
y = expression(p[M](x)),
col = expression(beta)) +
theme_classic() +
scale_color_manual(values = setNames(couleurs, c("fM"))))
### Changement de la dépendance
lambda <- 0.1
aretes <- matrix(c(1, 2, 2, 3, 2, 4, 2, 5, 2, 6, 2, 7, 2, 8,
2, 9, 9, 10, 9, 11, 9, 12, 9, 13, 9, 14, 9, 15,
9, 16, 16, 17, 16, 18, 16, 19, 16, 20, 16, 21, 16, 22,
16, 23, 23, 24, 23, 25, 23, 26, 23, 27, 23, 28, 23, 29,
23, 30, 30, 31, 30, 32, 30, 33, 30, 34, 30, 35, 30, 36,
30, 37, 30, 38, 30, 39, 30, 40, 30, 41, 30, 42, 30, 43,
30, 44, 30, 45, 30, 46, 30, 47, 30, 48, 30, 49, 30, 50),
byrow = TRUE, ncol = 2)
aretes_alpha <- cbind(aretes, c(rep(0.8, 7),
0.1,
rep(0.6, 6),
0.1,
rep(0.5, 6),
0.1,
rep(0.4, 6),
0.1,
rep(0.9, 20))
)
A <- diag(d)
for (i in 1:nrow(aretes))
{
u <- aretes_alpha[i, 1]
v <- aretes_alpha[i, 2]
A[u, v] <- aretes_alpha[i, 3]
A[v, u] <- aretes_alpha[i, 3]
}
fM <- pdf_M(A, lambda)
df_FM <- data.frame(x = 0:(nfft - 1),
"fM" = fM) %>% pivot_longer(cols = -x,
names_to = "beta",
values_to = "fM")
dark2 <- brewer.pal(8, "Dark2")
couleurs <- c("fM" = dark2[1])
(ggFM <- ggplot(df_FM %>% filter(x <= 200), aes(x = x, y = fM)) +
geom_segment(aes(xend = x, yend = 0), show.legend = TRUE) +
geom_point() +
labs(title = "FMP de M",
x = expression(x),
y = expression(p[M](x)),
col = expression(beta)) +
theme_classic() +
scale_color_manual(values = setNames(couleurs, c("fM"))))
(ggFM <- ggplot(df_FM %>% filter(x <= 40), aes(x = x, y = fM)) +
geom_segment(aes(xend = x, yend = 0), show.legend = TRUE) +
geom_point() +
labs(title = "FMP de M",
x = expression(x),
y = expression(p[M](x)),
col = expression(beta)) +
theme_classic() +
scale_color_manual(values = setNames(couleurs, c("fM"))))
(ggFM <- ggplot(df_FM %>% filter(x <= 40), aes(x = x, y = fM)) +
geom_segment(aes(xend = x, yend = 0), show.legend = TRUE,
col = couleurs[1]) +
geom_point(col = couleurs[1]) +
labs(title = "FMP de M",
x = expression(x),
y = expression(p[M](x)),
col = expression(beta)) +
theme_classic())
alloc1 <- exp_alloc_Nv(A, 1, lambda, 1)
alloc1 <- exp_alloc_Nv(A, 1, lambda, 1)
alloc16 <- exp_alloc_Nv(A, 1, lambda, 16)
alloc30 <- exp_alloc_Nv(A, 1, lambda, 30)
(ggFM <- ggplot(df_alloc %>% filter(x <= 50), aes(x = x, y = alloc)) +
geom_segment(aes(xend = x, yend = 0), show.legend = TRUE) +
geom_point() +
labs(title = bquote("Allocation espérée de" ~ M),
x = expression(x),
y = expression(E[N[nu]](k)),
col = expression(nu)) +
theme_classic() +
scale_color_manual(values = setNames(couleurs, c("alloc1",
"alloc16",
"alloc30")),
labels = c("alloc1" = 1,
"alloc16" = 16,
"alloc30" = 30)))#  Figure 9
df_alloc <- data.frame(x = 0:(nfft - 1),
"alloc1" = alloc1,
"alloc16" = alloc16,
"alloc30" = alloc30) %>% pivot_longer(cols = -x,
names_to = "nu",
values_to = "alloc")
dark2 <- brewer.pal(8, "Dark2")
couleurs <- c("alloc1" = dark2[1],
"alloc16" = dark2[2],
"alloc30" = dark2[3])
(ggFM <- ggplot(df_alloc %>% filter(x <= 50), aes(x = x, y = alloc)) +
geom_segment(aes(xend = x, yend = 0), show.legend = TRUE) +
geom_point() +
labs(title = bquote("Allocation espérée de" ~ M),
x = expression(x),
y = expression(E[N[nu]](k)),
col = expression(nu)) +
theme_classic() +
scale_color_manual(values = setNames(couleurs, c("alloc1",
"alloc16",
"alloc30")),
labels = c("alloc1" = 1,
"alloc16" = 16,
"alloc30" = 30)))#  Figure 9
df_alloc <- data.frame(x = 0:(nfft - 1),
"alloc1" = alloc1 / fM,
"alloc16" = alloc16 / fM,
"alloc30" = alloc30 / fM) %>% pivot_longer(cols = -x,
names_to = "nu",
values_to = "alloc")
dark2 <- brewer.pal(8, "Dark2")
couleurs <- c("alloc1" = dark2[1],
"alloc16" = dark2[2],
"alloc30" = dark2[3])
(ggFM <- ggplot(df_alloc %>% filter(x <= 50), aes(x = x, y = alloc)) +
geom_segment(aes(xend = x, yend = 0), show.legend = TRUE) +
geom_point() +
labs(title = bquote("Allocation espérée de" ~ M),
x = expression(x),
y = expression(E[N[nu]](k)),
col = expression(nu)) +
theme_classic() +
scale_color_manual(values = setNames(couleurs, c("alloc1",
"alloc16",
"alloc30")),
labels = c("alloc1" = 1,
"alloc16" = 16,
"alloc30" = 30)))#  Figure 9
(ggFM <- ggplot(df_alloc %>% filter(x <= 50), aes(x = x, y = alloc, col = nu)) +
geom_segment(aes(xend = x, yend = 0), show.legend = TRUE) +
geom_point() +
labs(title = bquote("Allocation espérée de" ~ M),
x = expression(x),
y = expression(E[N[nu]](k)),
col = expression(nu)) +
theme_classic() +
scale_color_manual(values = setNames(couleurs, c("alloc1",
"alloc16",
"alloc30")),
labels = c("alloc1" = 1,
"alloc16" = 16,
"alloc30" = 30)))#  Figure 9
(ggFM <- ggplot(df_alloc %>% filter(x <= 50), aes(x = x, y = alloc, col = nu)) +
geom_segment(aes(xend = x, yend = 0), show.legend = TRUE) +
geom_point() +
labs(title = bquote("Allocation espérée de" ~ M),
x = expression(x),
y = bquote(E[N[nu]|M==k]),
col = expression(nu)) +
theme_classic() +
scale_color_manual(values = setNames(couleurs, c("alloc1",
"alloc16",
"alloc30")),
labels = c("alloc1" = 1,
"alloc16" = 16,
"alloc30" = 30)))#  Figure 9
(ggFM <- ggplot(df_alloc %>% filter(x <= 50), aes(x = x, y = alloc, col = nu)) +
geom_segment(aes(xend = x, yend = 0), show.legend = TRUE) +
geom_point() +
labs(title = bquote("Allocation espérée de" ~ M),
x = expression(x),
y = bquote(E\[N[nu]|M==k\]),
(ggFM <- ggplot(df_alloc %>% filter(x <= 50), aes(x = x, y = alloc, col = nu)) +
geom_segment(aes(xend = x, yend = 0), show.legend = TRUE) +
geom_point() +
labs(title = bquote("Allocation espérée de" ~ M),
x = expression(x),
y = bquote(E[N[nu] ~ "|" ~ M == k]),
col = expression(nu)) +
theme_classic() +
scale_color_manual(values = setNames(couleurs, c("alloc1",
"alloc16",
"alloc30")),
labels = c("alloc1" = 1,
"alloc16" = 16,
"alloc30" = 30)))#  Figure 9
(ggFM <- ggplot(df_alloc %>% filter(x <= 50), aes(x = x, y = alloc, col = nu)) +
geom_segment(aes(xend = x, yend = 0), show.legend = TRUE) +
geom_point() +
labs(title = bquote("Espérance conditionnelle de" ~ M ~ "sachant" ~ k),
x = expression(x),
y = bquote(E[N[nu] ~ "|" ~ M == k]),
col = expression(nu)) +
theme_classic() +
scale_color_manual(values = setNames(couleurs, c("alloc1",
"alloc16",
"alloc30")),
labels = c("alloc1" = 1,
"alloc16" = 16,
"alloc30" = 30)))#  Figure 9
(ggFM <- ggplot(df_alloc %>% filter(x <= 50), aes(x = x, y = alloc, col = nu)) +
geom_segment(aes(xend = x, yend = 0), show.legend = TRUE) +
geom_point() +
labs(title = bquote("Espérance conditionnelle de" ~ M ~ "sachant" ~ k),
x = expression(k),
y = bquote(E[N[nu] ~ "|" ~ M == k]),
col = expression(nu)) +
theme_classic() +
scale_color_manual(values = setNames(couleurs, c("alloc1",
"alloc16",
"alloc30")),
labels = c("alloc1" = 1,
"alloc16" = 16,
"alloc30" = 30)))#  Figure 9
(ggFM <- ggplot(df_alloc %>% filter(x <= 50), aes(x = x, y = alloc, col = nu)) +
geom_segment(aes(xend = x, yend = 0), show.legend = TRUE) +
geom_point() +
labs(title = bquote("Espérance conditionnelle de" ~ M ~ "sachant" ~  M == k),
x = expression(k),
y = bquote(E[N[nu] ~ "|" ~ M == k]),
col = expression(nu)) +
theme_classic() +
scale_color_manual(values = setNames(couleurs, c("alloc1",
"alloc16",
"alloc30")),
labels = c("alloc1" = 1,
"alloc16" = 16,
"alloc30" = 30)))#  Figure 9
(ggFM <- ggplot(df_alloc %>% filter(x <= 50), aes(x = x, y = alloc, col = nu)) +
geom_segment(aes(xend = x, yend = 0), show.legend = TRUE) +
geom_point() +
labs(title = bquote("Espérance conditionnelle de" ~ N[nu] ~ "sachant" ~  M == k),
x = expression(k),
y = bquote(E[N[nu] ~ "|" ~ M == k]),
col = expression(nu)) +
theme_classic() +
scale_color_manual(values = setNames(couleurs, c("alloc1",
"alloc16",
"alloc30")),
labels = c("alloc1" = 1,
"alloc16" = 16,
"alloc30" = 30)))#  Figure 9
ggsave("illustrations_numeriques/figs/repro_section8/ENnuMk.pdf",
width = 9,
height = 4.8)
df_alloc <- data.frame(x = 0:(nfft - 1),
"alloc1" = cumsum(alloc1 / fM),
"alloc16" = cumsum(alloc16 / fM),
"alloc30" = cumsum(alloc30 / fM)) %>% pivot_longer(cols = -x,
names_to = "nu",
values_to = "alloc")
dark2 <- brewer.pal(8, "Dark2")
couleurs <- c("alloc1" = dark2[1],
"alloc16" = dark2[2],
"alloc30" = dark2[3])
(ggFM <- ggplot(df_alloc %>% filter(x <= 50), aes(x = x, y = alloc, col = nu)) +
geom_line() +
labs(title = bquote("Espérance conditionnelle de" ~ N[nu] ~ "sachant" ~  M == k),
x = expression(k),
y = bquote(E[N[nu] ~ "|" ~ M == k]),
col = expression(nu)) +
theme_classic() +
scale_color_manual(values = setNames(couleurs, c("alloc1",
"alloc16",
"alloc30")),
labels = c("alloc1" = 1,
"alloc16" = 16,
"alloc30" = 30)))#  Figure 9
df_alloc <- data.frame(x = 0:(nfft - 1),
"alloc1" = cumsum(alloc1),
"alloc16" = cumsum(alloc16),
"alloc30" = cumsum(alloc30)) %>% pivot_longer(cols = -x,
names_to = "nu",
values_to = "alloc")
dark2 <- brewer.pal(8, "Dark2")
couleurs <- c("alloc1" = dark2[1],
"alloc16" = dark2[2],
"alloc30" = dark2[3])
(ggFM <- ggplot(df_alloc %>% filter(x <= 50), aes(x = x, y = alloc, col = nu)) +
geom_line() +
labs(title = bquote("Espérance conditionnelle de" ~ N[nu] ~ "sachant" ~  M == k),
x = expression(k),
y = bquote(E[N[nu] ~ "|" ~ M == k]),
col = expression(nu)) +
theme_classic() +
scale_color_manual(values = setNames(couleurs, c("alloc1",
"alloc16",
"alloc30")),
labels = c("alloc1" = 1,
"alloc16" = 16,
"alloc30" = 30)))#  Figure 9
(ggFM <- ggplot(df_alloc %>% filter(x <= 50), aes(x = x, y = alloc, col = nu)) +
geom_segment(aes(xend = x, yend = 0), show.legend = TRUE) +
geom_point() +
labs(title = bquote("Espérance conditionnelle de" ~ N[nu] ~ "sachant" ~  M == k),
x = expression(k),
y = bquote(E[N[nu] ~ "|" ~ M == k]),
col = expression(nu)) +
theme_classic() +
scale_color_manual(values = setNames(couleurs, c("alloc1",
"alloc16",
"alloc30")),
labels = c("alloc1" = 1,
"alloc16" = 16,
"alloc30" = 30)))#  Figure 10
alloc1 <- exp_alloc_Nv(A, 1, lambda, 1)
alloc16 <- exp_alloc_Nv(A, 1, lambda, 16)
alloc30 <- exp_alloc_Nv(A, 1, lambda, 30)
df_alloc <- data.frame(x = 0:(nfft - 1),
"alloc1" = alloc1 / fM,
"alloc16" = alloc16 / fM,
"alloc30" = alloc30 / fM) %>% pivot_longer(cols = -x,
names_to = "nu",
values_to = "alloc")
dark2 <- brewer.pal(8, "Dark2")
couleurs <- c("alloc1" = dark2[1],
"alloc16" = dark2[2],
"alloc30" = dark2[3])
(ggFM <- ggplot(df_alloc %>% filter(x <= 50), aes(x = x, y = alloc, col = nu)) +
geom_segment(aes(xend = x, yend = 0), show.legend = TRUE) +
geom_point() +
labs(title = bquote("Espérance conditionnelle de" ~ N[nu] ~ "sachant" ~  M == k),
x = expression(k),
y = bquote(E[N[nu] ~ "|" ~ M == k]),
col = expression(nu)) +
theme_classic() +
scale_color_manual(values = setNames(couleurs, c("alloc1",
"alloc16",
"alloc30")),
labels = c("alloc1" = 1,
"alloc16" = 16,
"alloc30" = 30)))#  Figure 10
